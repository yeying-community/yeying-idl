syntax = "proto3";
option go_package = "yeying/api/service";
package yeying.api.service;

import "yeying/api/common/message.proto";
import "yeying/api/common/code.proto";

/**
 * 节点提供服务登记、注销和查询的服务。每个服务都有一个身份，实际向节点登记的是身份信息。构建自己的服务，除了事先开发服务意外，需要以下几件事：
 * 1、创建服务身份
 * 2、使用身份启动服务
 * 3、选择节点登记服务
 * 4、应用绑定该服务
 */
service Service {
  rpc Whoami(WhoamiRequest) returns (WhoamiResponse) {}
  rpc Register(RegisterRequest) returns (RegisterResponse) {}
  rpc Search(SearchRequest) returns (SearchResponse) {}
  rpc Unregister(UnregisterRequest) returns (UnregisterResponse) {}
}

message WhoamiRequest {
  common.MessageHeader header = 1;
}

message WhoamiResponse {
  common.MessageHeader header = 1;
  WhoamiResponseBody body = 2;
}

message WhoamiResponseBody {
  common.ResponseStatus status = 1;
  ServiceMetadata service = 2;
}

message RegisterRequest {
  common.MessageHeader header = 1;
  RegisterRequestBody body = 2;
}

message RegisterRequestBody {
  ServiceMetadata service = 1;
}

message RegisterResponse {
  common.MessageHeader header = 1;
  RegisterResponseBody body = 2;
}

message RegisterResponseBody {
  common.ResponseStatus status = 2;
}

message SearchRequest {
  common.MessageHeader header = 1;
  SearchRequestBody body = 2 ;
}

message SearchRequestBody {
  common.ServiceCodeEnum code = 1;
  string owner = 2;
}

message SearchResponse {
  common.MessageHeader header = 1;
  SearchResponseBody body = 2;
}

message SearchResponseBody {
  common.ResponseStatus status = 1;
  repeated ServiceMetadata services = 2;
}

message UnregisterRequest {
  common.MessageHeader header = 1;
  UnregisterRequestBody body = 2;
}

message UnregisterRequestBody {
  string did = 1;
}

message UnregisterResponse {
  common.MessageHeader header = 1;
  UnregisterResponseBody body = 2;
}

message UnregisterResponseBody {
  common.ResponseStatus status = 1;
}

message ServiceMetadata {
  /* 服务所有者 */
  string owner = 1;
  /* 服务所在网络 */
  uint32 network = 2;
  /* 服务所在网络地址 */
  string address = 3;
  /* 服务身份 */
  string did = 4;
  /* 服务版本 */
  uint32 version = 5;
  /* 服务名称 */
  string name = 6;
  /* 服务名称 */
  string description = 7;
  /* 服务编码 */
  common.ServiceCodeEnum code = 8;
  /* 服务apis */
  repeated common.ApiCodeEnum apis = 9;
  /* 服务代理 */
  string proxy = 10;
  /* 服务grpc地址 */
  string grpc = 11;
  /* 服务头像 */
  string avatar = 12;
  /* 服务创建时间点 */
  string created = 13;
  /* 服务修改时间点 */
  string checkpoint = 14;
  // 签名
  string signature = 15;
}