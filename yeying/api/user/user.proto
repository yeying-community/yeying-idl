syntax = "proto3";
option go_package = "yeying/api/user";
package yeying.api.user;

import "yeying/api/common/message.proto";

service User {
  // 添加用户
  rpc Add(AddUserRequest) returns(AddUserResponse) {}
  // 获取用户
  rpc Get(GetUserRequest) returns(GetUserResponse) {}
  // 删除用户
  rpc Delete(DeleteUserRequest) returns(DeleteUserResponse) {}
  // 修改用户信息
  rpc Update(UpdateUserRequest) returns(UpdateUserResponse) {}
  // 用户状态信息
  rpc State(UserStateRequest) returns(UserStateResponse) {}
}

message UserMetadata {
  string did = 1;
  string name = 2;
  string avatar = 3;
  string createdAt = 4;
  string updatedAt = 5;
  string signature = 6;
}

message UserState {
  string did = 1;
  UserRoleEnum role = 2;
  UserStatusEnum status = 3;
  string createdAt = 4;
  string updatedAt = 5;
  string signature = 6;
}

message AddUserRequest {
  common.MessageHeader header = 1;
  AddUserRequestBody body = 2;
}

message AddUserRequestBody {
  UserMetadata user = 1;
}

message AddUserResponse {
  common.MessageHeader header = 1;
  AddUserResponseBody body = 2;
}

message AddUserResponseBody {
  common.ResponseStatus status = 1;
}

message UpdateUserRequest {
  common.MessageHeader header = 1;
  UpdateUserRequestBody body = 2;
}

message UpdateUserRequestBody {
  UserMetadata user = 1;
}

message UpdateUserResponse {
  common.MessageHeader header = 1;
  UpdateUserResponseBody body = 2;
}

message UpdateUserResponseBody {
  common.ResponseStatus status = 1;
}

message DeleteUserRequest {
  common.MessageHeader header = 1;
}

message DeleteUserResponse {
  common.MessageHeader header = 1;
  DeleteUserResponseBody body = 2;
}

message DeleteUserResponseBody {
  common.ResponseStatus status = 1;
}

message GetUserRequest {
  common.MessageHeader header = 1;
}

message GetUserResponse {
  common.MessageHeader header = 1;
  GetUserResponseBody body = 2;
}

message GetUserResponseBody {
  common.ResponseStatus status = 1;
  UserMetadata user = 2;
}

message UserStateRequest {
  common.MessageHeader header = 1;
}

message UserStateResponse {
  common.MessageHeader header = 1;
  UserStateResponseBody body = 2;
}

message UserStateResponseBody {
  common.ResponseStatus status = 1;
  UserState userState = 2;
}

enum UserStatusEnum {
  // 未知编码，是一种占位符
  USER_STATUS_UNKNOWN = 0;

  // 活跃：表示用户目前正在使用软件并与其进行交互
  USER_STATUS_ACTIVE = 1;

  // 离线：表示用户当前不处于活跃状态，但可能会随时返回
  USER_STATUS_OFFLINE = 2;

  // 禁用：表示用户的访问权限被暂时或永久性地限制
  USER_STATUS_DISABLE = 3;

  // 锁定：表示用户的账户被暂时性地冻结，通常是由于安全原因
  USER_STATUS_LOCK = 4;

  // 未验证：表示用户账户在创建后尚未通过验证
  USER_STATUS_UNVERIFIED = 5;

  // 删除：表示用户账户已经被永久删除，无法恢复
  USER_STATUS_DELETED = 6;

  // 休眠：表示用户账户由于长时间未活跃而被标记为休眠状态
  USER_STATUS_DORMANT = 7;

  // 冻结：表示用户账户在一段时间内暂时不可用
  USER_STATUS_FREEZE = 8;

  // 待审核：表示新用户注册后正在等待管理员或审核人员审批
  USER_STATUS_AUDIT = 9;

  // 审核未通过：表示管理员或审核人员拒绝了用户的注册请求
  USER_STATUS_REFUSED = 10;
}

enum UserRoleEnum {
  // 未知编码，是一种占位符
  USER_ROLE_UNKNOWN = 0;

  // 所有者
  USER_ROLE_OWNER = 1;

  // 普通用户
  USER_ROLE_NORMAL = 2;
}

