syntax = "proto3";
option go_package = "yeying/api/identity";
package yeying.api.identity;

import "yeying/api/common/message.proto";
import "yeying/api/common/code.proto";

// 一个身份可以表示和一个人相关的身份，比如个人、企业、社区等，也可以表示和软件相关的身份，提供各种软件服务，比如提供仓储服务、节点发现服务、以及算
// 法服务等。

service Identity {
  rpc Register(RegisterRequest) returns (RegisterResponse) {}
  rpc Search(SearchRequest) returns (SearchResponse) {}
  rpc Update(UpdateRequest) returns (UpdateResponse) {}
  rpc Unregister(UnregisterRequest) returns (UnregisterResponse) {}
}

enum Category {
  // 未知编码，是一种占位符
  CATEGORY_UNKNOWN = 0;

  // 与人相关的身份
  HUMANITY = 1;

  // 与软件相关的身份
  SOFTWARE = 2;
}

// 服务定义会不断的演化
enum ServiceType {
  // 未知编码，是一种占位符
  SERVICE_TYPE_UNKNOWN = 0;

  // 节点服务供应商
  NODE = 1;

  // 机器人服务供应商，提供各种模型和算法服务
  ROBOT = 2;

  // 仓储服务供应商
  STORE = 3;
}

enum OrganizationType {
  // 未知编码，是一种占位符
  ORGANIZATION_TYPE_UNKNOWN = 0;

  // 个人
  PERSONAL = 1;

  // 企业
  ENTERPRISE = 2;

  // 社区
  COMMUNITY = 3;
}

message Condition {
  string parent = 1;
  string did = 2;
  Category category = 3;
  string type = 4;
}

message IdentityMetadata {
  string parent = 1;
  string network = 2;
  string did = 3;
  string address = 4;
  Category category = 5;
  string type = 6; // 某种身份类别下，身份的类型，比如SOFTWARE类别下，有robot、store、spider、node等，HUMANITY类别下有personal、enterprise等
  string name = 7;
  string extend = 8;
  string checkpoint = 9;
}

message RegisterRequest {
  string parent = 1;
  string network = 2;
  string did = 3;
  string address = 4;
  Category category = 5;
  string type = 6;
  string name = 7;
  string extend = 8;
}

message RegisterResponse {
  common.ResponseStatus status = 1;
  IdentityMetadata metadata = 2;
}

message SearchRequest {
  string did = 1;
  Condition condition = 2;
}

message SearchResponse {
  common.ResponseStatus status = 1;
  repeated IdentityMetadata metadata = 2;
}

message UpdateRequest {
  string did = 1;
  string extend = 2;
}

message UpdateResponse {
  common.ResponseStatus status = 1;
  repeated IdentityMetadata metadata = 2;
}

message UnregisterRequest {
  string did = 1;
}

message UnregisterResponse {
  common.ResponseStatus status = 1;
  IdentityMetadata metadata = 2;
}