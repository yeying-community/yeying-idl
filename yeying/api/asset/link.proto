syntax = "proto3";
option go_package = "yeying/api/asset";
package yeying.api.asset;

import "yeying/api/common/message.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
// 添加 Swagger 文档元数据
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Yeying API";
    version: "1.0";
    contact: {
      name: "yeying-community";
      url: "https://github.com/yeying-community/yeying-idl.git";
      email: "yeying.community@gmail.com";
    };
  };
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

service Link {
  // 创建资产分享链接
  rpc Create(CreateLinkRequest) returns (CreateLinkResponse) {
    option (google.api.http) = {
      post: "/api/v1/link/create"
      body: "*"
    };
  }
  // 搜索资产分享链接
  rpc Search(SearchLinkRequest) returns (SearchLinkResponse) {
    option (google.api.http) = {
      post: "/api/v1/link/search"
      body: "*"
    };
  }
  // 获得分享链接明细
  rpc Detail(LinkDetailRequest) returns (LinkDetailResponse) {
    option (google.api.http) = {
      post: "/api/v1/link/detail"
      body: "*"
    };
  }
  // 分享链接的访问信息
  rpc Visitor(LinkVisitorRequest) returns (LinkVisitorResponse) {
    option (google.api.http) = {
      post: "/api/v1/link/visitor"
      body: "*"
    };
  }
  // 取消分享
  rpc Disable(DisableLinkRequest) returns (DisableLinkResponse) {
    option (google.api.http) = {
      post: "/api/v1/link/disable"
      body: "*"
    };
  }
  // 更新资产分享链接，实现变更、取消等功能
  rpc Update(UpdateLinkRequest) returns (UpdateLinkResponse) {
    option (google.api.http) = {
      post: "/api/v1/link/update"
      body: "*"
    };
  }
}

message CreateLinkRequest {
  common.MessageHeader header = 1;
  CreateLinkRequestBody body = 2;
}

message CreateLinkRequestBody {
  LinkMetadata link = 1;
}

message CreateLinkResponse {
  common.MessageHeader header = 1;
  CreateLinkResponseBody body = 2;
}

message CreateLinkResponseBody {
  common.ResponseStatus status = 1;
  LinkDetail detail = 2;
}

message SearchLinkRequest {
  common.MessageHeader header = 1;
  SearchLinkRequestBody body = 2;
}

message SearchLinkRequestBody {
  common.RequestPage page = 1;
  SearchLinkCondition condition = 2;
}

message SearchLinkCondition {
  string hash = 1;
}

message SearchLinkResponse {
  common.MessageHeader header = 1;
  SearchLinkResponseBody body = 2;
}

message SearchLinkResponseBody {
  common.ResponseStatus status = 1;
  common.ResponsePage page = 2;
  repeated LinkMetadata links = 3;
}

message DisableLinkRequest {
  common.MessageHeader header = 1;
  DisableLinkRequestBody body = 2;
}

message DisableLinkRequestBody {
  string linkId = 1;
}

message DisableLinkResponse {
  common.MessageHeader header = 1;
  DisableLinkResponseBody body = 2;
}

message DisableLinkResponseBody {
  common.ResponseStatus status = 1;
}

message UpdateLinkRequest {
  common.MessageHeader header = 1;
  UpdateLinkRequestBody body = 2;
}

message UpdateLinkRequestBody {
  LinkMetadata link = 1;
}

message UpdateLinkResponse {
  common.MessageHeader header = 1;
  UpdateLinkResponseBody body = 2;
}

message UpdateLinkResponseBody {
  common.ResponseStatus status = 1;
  LinkDetail detail = 2;
}

message LinkDetailRequest {
  common.MessageHeader header = 1;
  LinkDetailRequestBody body = 2;
}

message LinkDetailRequestBody {
  string uid = 1;
}

message LinkDetailResponse {
  common.MessageHeader header = 1;
  LinkDetailResponseBody body = 2;
}

message LinkDetailResponseBody {
  common.ResponseStatus status = 1;
  LinkDetail detail = 2;
}

message LinkDetail {
  UrlMetadata url = 1;
  LinkMetadata link = 2;
}

message LinkVisitorRequest {
  common.MessageHeader header = 1;
  LinkVisitorRequestBody body = 2;
}

message LinkVisitorRequestBody {
  string uid = 1;
  common.RequestPage page = 2;
}

message LinkVisitorResponse {
  common.MessageHeader header = 1;
  LinkVisitorResponseBody body = 2;
}

message LinkVisitorResponseBody {
  common.ResponseStatus status = 1;
  common.ResponsePage page = 2;
  repeated VisitorMetadata visitors = 3;
}

message LinkMetadata {
  string owner = 1;           // 分享链接所有者
  string uid = 2;             // 分享链接唯一ID
  LinkTypeEnum type = 3;      // 分享链接类型
  string visitors = 4;        // 指定分享链接的访问者身份ID，多个访问者使用逗号隔开，如果不指定，说明任何身份都可以访问
  string namespaceId = 5;     // 资产所在命名空间
  string name = 6;            // 分享链接的名称，默认是资产名称
  string description = 7;     // 分享链接的描述
  string hash = 8;            // 资产内容哈希
  string token = 9;           // 访问口令
  string startedAt = 10;      // 分享链接有效开始时间，不设置表示从创建时间开始
  string expiredAt = 11;      // 分享链接有效截止时间，不设置表示永久有效
  string createdAt = 12;      // 分享链接创建时间
  string signature = 13;      // 资产所有者签名
}

enum UrlStatusEnum {
  URL_STATUS_UNKNOWN = 0; // 未知编码，是一种占位符
  URL_STATUS_ENABLE = 1; // 分享链接可用状态
  URL_STATUS_DISABLE = 2; // 分享链接不可用状态
}

enum LinkTypeEnum {
  LINK_TYPE_UNKNOWN = 0; // 未知编码，是一种占位符
  LINK_TYPE_PUBLIC = 1; // 完全公开的，无需验证身份，直接访问
  LINK_TYPE_AUTHENTICATED = 2; // 需要验证身份，包括访问需要的身份DID、下载时间和签名
}

message UrlMetadata {
  string serviceDid = 1;  // 服务DID
  string linkId = 2;      // 分享链接ID
  string token = 3;       // 访问令牌
  string url = 4;         // 分享链接URL
  UrlStatusEnum status = 5;  // 链接地址状态
  string createdAt = 6;   // 创建时间
  string updatedAt = 7;   // 创建时间
  string signature = 8;   // 服务签名
}

message VisitorMetadata {
  string linkId = 1;     // 分享链接ID
  string did = 2;        // 访问者身份ID
  string createdAt = 3;  // 访问时间
  string signature = 4;  // 访问者签名
}
