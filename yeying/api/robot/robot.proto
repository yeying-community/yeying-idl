syntax = "proto3";
option go_package = "yeying/api/robot";
package yeying.api.robot;

import "yeying/api/common/message.proto";

service Robot {
  rpc Completion(ChatRequest) returns (stream ChatResponse){}
  rpc Profile(ProfileRequest) returns (ProfileResponse){}
  rpc Generation(GenerationRequest) returns (stream GenerationResponse){}
  rpc Identity(IdentityRequest) returns (IdentityResponse){}
}

enum ActionType {
  REGISTER = 0;
}

enum ProviderName {
  OPENAI = 0;
}

enum ContentType {
  PNG = 0;
}

enum ResponseFormatType {
  URL = 0;
  BASE64 = 1;
}

enum RoleType {
  USER = 0;
}

message IdentityResponse {
  common.ResponseStatus status = 1;
}

message IdentityRequest {
  string did = 1;
  ActionType action = 2;
  RoleType role = 3;
}

message GenerationRequest {
  ProviderName providerName = 1;
  string model = 2;
  string did = 3;
  ContentType contentType = 4;
  string prompt = 5;
  int32 count = 6;
  string size = 7;
  ResponseFormatType responseFormat = 8;
  bytes image = 9;
  bytes mask = 10;
}

message GenerationResponse {
  bytes data = 1;
}

message ProfileRequest {
  string did = 1;
  ProviderName providerName = 2;
}

message ProfileResponse {
  repeated Model models = 1;
  repeated Engine engines = 2;
}

message Engine {
  int64 created = 1;
  string id = 2;
  string object = 3;
  string owner = 4;
  repeated Permission permissions = 5;
  bool ready = 6;
}

message Model {
  int64 created = 1;
  string id = 2;
  string object = 3;
  string ownedBy = 4;
  string parent = 5;
  repeated Permission permissions = 6;
  string root = 7;
}

message Permission {
  bool allowCreateEngine = 1;
  bool allowFineTuning = 2;
  bool allowLogprobs = 3;
  bool allowSampling = 4;
  bool allowSearchIndices = 5;
  bool allowView = 6;
  int64 created = 7;
  string group = 8;
  string id = 9;
  bool isBlocking = 10;
  string object = 11;
  string organization = 12;
}

message ChatRequest {
  ProviderName providerName = 1;
  string model = 2;
  string did = 3;
  repeated Message messages = 4;
}

message Message {
  string role = 1;
  string content = 2;
}

message ChatResponse {
  string id = 1;
  string object = 2;
  int64 created = 3;
  repeated Choice choices = 4;
}

message Choice {
  int32 index = 1;
  Message message = 2;
  string finishReason = 3;
}
