syntax = "proto3";
option go_package = "yeying/api/robot";
package yeying.api.robot;

import "yeying/api/common/code.proto";

service Robot {
  rpc Completion(ChatRequest) returns (stream ChatResponse){}
  rpc Profile(ProfileRequest) returns (ProfileResponse){}
  rpc Generation(GenerationRequest) returns (stream GenerationResponse){}
  rpc Naming(NamingRequest) returns (NamingResponse){}
}

enum RobotType {
  CHATGPT = 0;
}

enum GenerationType {
  IMAGE = 0;
}

enum ResponseFormatType {
  URL = 0;
  BASE64 = 1;
}

enum LanguageType {
  ZH_CN = 0;
  EN_US = 1;
}

enum GenderType {
  MALE = 0;
  FEMALE = 1;
  ANY = 2;
}

enum NameType {
  PERSON = 0;
  SERVICE = 1;
}

message NamingResponse {
  repeated string nameList = 1;
}

message NamingRequest {
  string did = 1;
  NameType nameType = 2;
  LanguageType languageType = 3;
  int32 count = 4;
  int32 length = 5;
  GenderType genderType = 6;
}

message GenerationRequest {
  string did = 1;
  GenerationType generationType = 2;
  string prompt = 3;
  int32 count = 4;
  string size = 5;
  ResponseFormatType responseFormat = 6;
  RobotType robotType = 7;
  bytes image = 8;
  bytes mask = 9;
}

message GenerationResponse {
  bytes data = 1;
}

message ProfileRequest {
  RobotType robotType = 1;
}

message ProfileResponse {
  repeated Model models = 1;
  repeated Engine engines = 2;
}

message Engine {
  int64 created = 1;
  string id = 2;
  string object = 3;
  string owner = 4;
  repeated Permission permissions = 5;
  bool ready = 6;
}

message Model {
  int64 created = 1;
  string id = 2;
  string object = 3;
  string ownedBy = 4;
  string parent = 5;
  repeated Permission permissions = 6;
  string root = 7;
}

message Permission {
  bool allowCreateEngine = 1;
  bool allowFineTuning = 2;
  bool allowLogprobs = 3;
  bool allowSampling = 4;
  bool allowSearchIndices = 5;
  bool allowView = 6;
  int64 created = 7;
  string group = 8;
  string id = 9;
  bool isBlocking = 10;
  string object = 11;
  string organization = 12;
}

message ChatRequest {
  string model = 1;
  string did = 2;
  repeated Message messages = 3;
  RobotType robotType = 4;
}

message Message {
  string role = 1;
  string content = 2;
}

message ChatResponse {
  string id = 1;
  string object = 2;
  int64 created = 3;
  repeated Choice choices = 4;
}

message Choice {
  int32 index = 1;
  Message message = 2;
  string finishReason = 3;
}
