syntax = "proto3";
option go_package = "yeying/api/application";
package yeying.api.application;

import "yeying/api/common/message.proto";
import "yeying/api/common/code.proto";

/**
 * 节点自带的应用和后面发布的应用，夜莺社区提供一个节点和一组组网协议。当然其他的社团或者个人，也可以基于源代码，发布自己的节点和一组组网协议，当然
 * 也可以加入到夜莺社区的网络。
 * TODO: 一种是节点自带的应用，另一种通过节点发布的应用，需要考虑如何统一起来，做合规审计以及管理。
 */
service Application {
  /* 搜索应用 */
  rpc Search(SearchRequest) returns (SearchResponse) {}

  /* 应用审计 */
  rpc Audit(AuditRequest) returns (AuditResponse) {}

  /* 创建应用 */
  rpc Create(CreateRequest) returns (CreateResponse) {}

  /* 应用详情 */
  rpc Detail(DetailRequest) returns (DetailResponse) {}

  /* 下架应用 */
  rpc Offline(OfflineRequest) returns (OfflineResponse) {}

  /* 上架应用 */
  rpc Online(OnlineRequest) returns (OnlineResponse) {}

  /* 删除应用 */
  rpc Delete(DeleteRequest) returns (DeleteResponse) {}
}

message SearchRequest {
  common.MessageHeader header = 1;
  SearchRequestBody body = 2;
}

message SearchRequestBody {
  SearchCondition condition = 1;
  common.RequestPage page = 2;
}

message SearchCondition {
  common.ApplicationCodeEnum code = 1;
  common.ApplicationStatusEnum status = 2;
  string owner = 3;
}

message SearchResponse {
  common.MessageHeader header = 1;
  SearchResponseBody body = 2;
}

message SearchResponseBody {
  common.ResponseStatus status = 1;
  repeated ApplicationMetadata applications = 2;
  common.ResponsePage page = 3;
}

message CreateRequest {
  common.MessageHeader header = 1;
  CreateRequestBody body = 2;
}

message CreateRequestBody {
  ApplicationMetadata application = 1;
}

message CreateResponse {
  common.MessageHeader header = 1;
  CreateResponseBody body = 2;
}

message CreateResponseBody {
  common.ResponseStatus status = 1;
}

message DetailRequest {
  common.MessageHeader header = 1;
  DetailRequestBody body = 2;
}

message DetailRequestBody {
  string did = 1;
  uint32 version = 2;
}

message DetailResponse {
  common.MessageHeader header = 1;
  DetailResponseBody body = 2;
}

message DetailResponseBody {
  common.ResponseStatus status = 1;
  common.ApplicationStatusEnum appStatus =3;
  ApplicationMetadata application = 2;
}

message OfflineRequest {
  common.MessageHeader header = 1;
  OfflineRequestBody body = 2;
}

message OfflineRequestBody {
  string did = 1;
  uint32 version = 2;
}

message OfflineResponse {
  common.MessageHeader header = 1;
  OfflineResponseBody body = 2;
}

message OfflineResponseBody {
  common.ResponseStatus status = 1;
}

message OnlineRequest {
  common.MessageHeader header = 1;
  OnlineRequestBody body = 2;
}

message OnlineRequestBody {
  string did = 1;
  uint32 version = 2;
}

message OnlineResponse {
  common.MessageHeader header = 1;
  OnlineResponseBody body = 2;
}

message OnlineResponseBody {
  common.ResponseStatus status = 1;
}

message ApplicationExtend {
  /* 审批意见 */
  repeated ApplicationComment comments = 1;
}

message ApplicationComment {
  /* 审批人 */
  string auditor = 1;
  /* 审批意见 */
  string comment = 2;
  /* 是否通过 */
  bool passed = 3;
  /* 审批人签名 */
  string signature = 4;
}

message ApplicationMetadata {
  /* 应用所有者 */
  string owner = 1;
  /* 身份所在网络 */
  string network = 2;
  /* 身份地址 */
  string address = 3;
  /* 应用身份 */
  string did = 4;
  /* 应用版本 */
  uint32 version = 5;
  /* 应用哈希 */
  string hash = 6;
  /* 应用名称 */
  string name = 7;
  /* 应用编号 */
  common.ApplicationCodeEnum code = 8;
  /* 应用描述 */
  string description = 9;
  /* 访问路径 */
  string location = 10;
  /* 应用依赖的服务编码，用,隔开 */
  string serviceCodes = 11;
  /* 应用头像 */
  string avatar = 12;
  /* 应用扩展信息 */
  string extend = 13;
  /* 应用创建时间 */
  string created = 14;
  /* 应用的检查点 */
  string checkpoint = 15;
  // 签名
  string signature = 16;
}

message DeleteRequest {
  common.MessageHeader header = 1;
  DeleteRequestBody body = 2;
}

message DeleteRequestBody {
  string did = 1;
  uint32 version = 2;
}

message DeleteResponse {
  common.MessageHeader header = 1;
  DeleteResponseBody body = 2;
}

message DeleteResponseBody {
  common.ResponseStatus status = 1;
}

message AuditRequest {
  common.MessageHeader header = 1;
  AuditRequestBody body = 2;
}

message AuditRequestBody {
  ApplicationComment comment = 1;
}

message AuditResponse {
  common.ResponseStatus status = 1;
}