syntax = "proto3";


/**
 * TODO: 未来common目录下，统一生成到独立的包里面方便其他项目集成生成的代码，目前包的路径处理需要服务端或者客户端自行处理；
 * 请坚持使用package关键字，其好处如下：
 * 1. 组织和管理消息和服务：通过将它们归属到特定的包中，可以更好地组织和管理它们。
 * 2. 防止命名冲突：不同package下的消息和服务可以使用相同的名称，因为它们在不同的包命名空间中。
 * 3. 代码生成工具支持：代码生成工具可以根据指定的package生成相应的包结构，使得生成的代码更具可读性和可维护性。
 */
package yeying.api.common;
option go_package = "yeying/api/common";

/**
 * 接口的响应状态码定义遵循的规则，必须包含以下4个说明：
 * 1、编码
 * 2、编号
 * 3、含义
 * 4、使用场景
 */
enum ResponseCodeEnum {
  // 未知编码，是一种占位符
  RESPONSE_CODE_UNKNOWN = 0;

  /**
   * 含义：操作完成
   * 使用场景：成功创建、成功提交
   */
  OK = 1;

  /**
   * 含义：提供的参数无效或不符合预期
   * 使用场景：当接收到客户端请求参数不正确时返回
   */
  INVALID_ARGUMENT = 2;

  /**
   * 含义：请求未通过身份验证
   * 使用场景：当请求需要身份验证但未提供有效凭据时返回
   */
  UNAUTHENTICATED = 3;

  /**
   * 含义：请求无法被执行，因为没有足够的权限
   * 使用场景：当客户端没有执行请求所需操作的权限时返回
   */
  PERMISSION_DENIED = 4;

  /**
   * 含义：请求对象或资源未找到
   * 使用场景：当请求的对象或资源不存在时返回
   */
  NOT_FOUND = 5;

  /**
   * 含义：请求创建的对象已经存在
   * 使用场景：当请求创建的对象（如用户、资源等）已经存在时返回
   */
  ALREADY_EXISTS = 6;

  /**
   * 含义：超过了资源使用限制
   * 使用场景：当请求操作超过了预先设定的限制时返回
   */
  LIMIT_EXCEEDED = 7;

  /**
   * 含义：请求的服务当前不可用
   * 使用场景：当请求的服务不可用（例如服务器维护、过载等）时返回
   */
  UNAVAILABLE = 8;

  /**
   * 含义：未知错误
   * 使用场景：当出现未知错误时返回或无法精确匹配到其他错误码时使用
   */
  UNKNOWN_ERROR = 9;

  /**
   * 含义：网络错误
   * 使用场景：应为网络错误，无法发送到服务器
   */
  NETWORK_ERROR = 10;

  /**
   * 含义：无效证书
   * 使用场景：浏览器无法识别证书，在浏览器中添加为受信任证书
   */
  INVALID_CERT = 11;

  /**
   * 含义：不支持
   * 使用场景：接口、服务不支持
   */
  NOT_SUPPORTED = 12;
}

/**
 * 合约的状态码需要遵守的规则：
 * 1、编码
 * 2、编号
 * 3、含义
 * 4、使用场景
 */
enum ContractStatusEnum {
  // 未知编码，是一种占位符
  CONTRACT_STATUS_UNKNOWN = 0;

  /**
   * 含义：未生效
   * 使用场景：拟定了一份合同，参与方没有完全签字
  */
  CONTRACT_STATUS_INACTIVATED = 1;

  /**
   * 含义：生效中
   * 使用场景：合同的参与方都已签字认可，合同已经开始工作
   */
  CONTRACT_STATUS_ACTIVATED = 2;

  /**
   * 含义：过期了
   * 使用场景：合同已经过期了，合同已停止工作
   */
  CONTRACT_STATUS_EXPIRED = 3;

  /**
   * 含义：终止了
   * 使用场景：合同的参与方中有人主动退出了合同
   */
  CONTRACT_STATUS_CANCELED = 4;
}

/**
 * 语言类型
 */
enum LanguageCodeEnum {
  // 未知编码，是一种占位符
  LANGUAGE_CODE_UNKNOWN = 0;

  // 简体中文
  LANGUAGE_CODE_ZH_CH = 1;

  // 美国英语
  LANGUAGE_CODE_EN_US = 2;
}

enum AppCodeEnum {
  // 未知编码，是一种占位符
  APP_CODE_UNKNOWN = 0;

  // 身份应用
  APP_CODE_IDENTITY = 1;

  // 仓库应用
  APP_CODE_STORE = 2;

  // 机器人应用
  APP_CODE_ROBOT = 3;

  // 应用仓库
  APP_CODE_WAREHOUSE = 4;
}

// 针对服务做一些原子的、标准化的工作，方便第三方接入区块链网络，也方便服务使用者集成使用
enum ApiCodeEnum {
  // 未知编码，是一种占位符
  API_CODE_UNKNOWN = 0;

  // 用户服务
  API_CODE_USER = 1;

  // 身份服务
  API_CODE_IDENTITY = 2;

  // 机器问答服务
  API_CODE_PROMPT = 3;

  // 资产服务
  API_CODE_ASSET = 4;

  // 证书服务
  API_CODE_CERTIFICATE = 5;

  // 存储服务
  API_CODE_STORAGE = 6;

  // 供应商，比如机器问答服务供应商
  API_CODE_PROVIDER = 7;
}

// 服务定义会不断的演化
enum ServiceCodeEnum {
  // 未知编码，是一种占位符
  SERVICE_CODE_UNKNOWN = 0;

  // 网络节点服务供应商
  SERVICE_CODE_NODE = 1;

  // 机器人服务供应商，提供各种模型和算法服务
  SERVICE_CODE_ROBOT = 2;

  // 仓储服务供应商
  SERVICE_CODE_STORE = 3;
}

enum AccountCodeEnum {
  // 未知编码，是一种占位符
  ACCOUNT_CODE_UNKNOWN = 0;

  // 个人
  ACCOUNT_CODE_PERSONAL = 1;

  // 企业
  ACCOUNT_CODE_ENTERPRISE = 2;

  // 社团
  ACCOUNT_CODE_COMMUNITY = 3;
}

enum CategoryCodeEnum {
  // 未知编码，是一种占位符
  CATEGORY_CODE_UNKNOWN = 0;

  // 与人相关的身份
  CATEGORY_CODE_HUMANITY = 1;

  // 与软件相关的身份
  CATEGORY_CODE_SOFTWARE = 2;
}

enum ImageFormatEnum {
  IMAGE_FORMAT_UNKNOWN = 0;
  IMAGE_FORMAT_PNG = 1;
}

// 数字格式
enum DigitalFormatEnum {
  // 未知数字格式，是一种占位符
  DIGITAL_FORMAT_UNKNOWN = 0;

  // 文本
  DIGITAL_FORMAT_TEXT = 1;

  // 图片
  DIGITAL_FORMAT_IMAGE = 2;

  // 视频
  DIGITAL_FORMAT_VIDEO = 3;

  // 音频
  DIGITAL_FORMAT_AUDIO = 4;

  // 应用
  DIGITAL_FORMAT_APP = 5;

  // 未知
  DIGITAL_FORMAT_OTHER = 10000;
}

enum ResponseContentFormatEnum {
  RESPONSE_CONTENT_FORMAT_UNKNOWN = 0;
  RESPONSE_CONTENT_FORMAT_URL = 1;
  RESPONSE_CONTENT_FORMAT_BASE64 = 2;
}

enum SessionSceneEnum {
  // 未知编码，是一种占位符
  SESSION_SCENE_UNKNOWN = 0;

  // 对话
  SESSION_SCENE_DIALOGUE = 1;

  // 作图
  SESSION_SCENE_DRAWING = 2;

  // 翻译
  SESSION_SCENE_TRANSLATION = 3;
}

enum ParticipantRoleEnum {
  // 未知编码，是一种占位符
  PARTICIPANT_ROLE_UNKNOWN = 0;

  // 普通参与者
  PARTICIPANT_ROLE_NORMAL = 1;

  // 发起者
  PARTICIPANT_ROLE_ADMIN = 2;
}