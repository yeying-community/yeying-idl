syntax = "proto3";
option go_package = "store/v1";

import "google/api/annotations.proto";

service Store {
  rpc Display(DisplayRequest) returns (DisplayResponse) {
    option (google.api.http) = {
      get: "/api/v1/store/metadata"
    };
  }

  rpc Put(stream PutRequest) returns (PutResponse) {
    option (google.api.http) = {
      post: "/api/v1/store"
      body: "*"
    };
  }

  rpc Get(GetRequest) returns (stream GetResponse) {
    option (google.api.http) = {
      get: "/api/v1/store"
    };
  }

  rpc Del(DelRequest) returns (DelResponse) {
    option (google.api.http) = {
      delete: "/api/v1/store"
    };
  }
}

enum AssetType {
  DIRECTORY = 0;
  FILE = 1;
  CHUNK = 2;
}

enum CipherType {
  AES_GCM = 0;
}

message Identity {
  string did = 1;
}

message Asset {
  AssetType assetType = 1;
  string name = 2;
  string hash = 3;
  string type = 4;
  uint64 size = 5;
  uint64 created = 6;
  uint64 timestamp = 7;
  uint32 index = 8;
  uint32 total = 9;
  string sibling = 10;
  bool encrypted = 11;
  Cipher cipher = 12;
}

message Cipher {
  CipherType cipherType = 1;
  string iv = 2;
  string hash = 3;
  string sibling = 4;
  uint64 size = 5;
}

message Namespace {
  Identity owner = 1;
  string path = 2;
}

message Result {
  uint32 code = 1;
  string message = 2;
}

message DisplayRequest {
  Namespace namespace = 1;
  bool recursive = 2;
}

message DisplayResponse {
  Result result = 1;
  Namespace namespace = 2;
  repeated AssetBundle assetBundles = 3;
}

message AssetBundle {
  Asset asset = 1;
  repeated Asset chunks = 2;
}

message PutRequest {
  oneof data {
    Metadata metadata = 1;
    bytes chunk = 2;
  }
}

message Metadata {
  Namespace namespace = 1;
  Asset asset = 2;
}

message PutResponse {
  Result result = 1;
  Namespace namespace = 2;
  Asset asset = 3;
}

message GetRequest {
  Namespace namespace = 1;
  string hash = 2;
}

message GetResponse {
  oneof data {
    Result result = 1;
    bytes chunk = 2;
  }
}

message DelRequest {
  Namespace namespace = 1;
  string hash = 2;
}

message DelResponse {
  Result result = 1;
}
